version = '0.1'

allprojects {
  apply plugin: 'idea'
  repositories {
    mavenCentral()
    mavenLocal()
    maven {
      url "https://repository.cloudera.com/artifactory/cloudera-repos/"
    }
  }
}

subprojects {
  apply plugin: 'java'
  sourceCompatibility = 1.7
}

project(':filter') {
  dependencies {
    compile('org.apache.spark:spark-streaming_2.10:1.6.0-cdh5.7.1-SNAPSHOT')
    compile('org.apache.spark:spark-streaming-kafka_2.10:1.6.0-cdh5.7.1-SNAPSHOT')
    compile('org.apache.kafka:kafka_2.10:0.9.0-kafka-2.0.1')
    compile('org.apache.kafka:kafka-clients:0.9.0-kafka-2.0.1')
    compile('com.google.code.gson:gson:1.7.2')
  }

  configurations {
    all*.exclude group: 'javax.jms', module: 'jms'
    all*.exclude group: 'com.sun.jdmk', module: 'jmxtools'
    all*.exclude group: 'com.sun.jmx', module: 'jmxri'
    published
  }

  configurations.all {
    resolutionStrategy {
      force 'com.fasterxml.jackson.core:jackson-databind:2.2.3'
    }
  }

  apply plugin: 'application'

  mainClassName = "com.clusterpriest.filter.Filter"

  run {
    if ( project.hasProperty('args') ) {
      args project.args.split('\\s+')
    }
  }
}

project(':analyze') {
  dependencies {
    compile project(':filter')
  }

  configurations {
    all*.exclude group: 'javax.jms', module: 'jms'
    all*.exclude group: 'com.sun.jdmk', module: 'jmxtools'
    all*.exclude group: 'com.sun.jmx', module: 'jmxri'
    published
  }

  configurations.all {
    resolutionStrategy {
      force 'com.fasterxml.jackson.core:jackson-databind:2.2.3'
    }
  }

  apply plugin: 'application'

  mainClassName = "com.clusterpriest.analyze.Analyze"

  run {
    if ( project.hasProperty('args') ) {
      args project.args.split('\\s+')
    }
  }
}
